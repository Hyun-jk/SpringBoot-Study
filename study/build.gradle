/*
그래들 : 자동화 툴 중 하나(자바, 그루비, 스칼라 등 JVM에서 실행되는 언어의 빌드 자동화를 위해 사용된다.
- 그래들은 의도적으로 많은 기능을 제공하지 않는다.
- 대신 플러그인을 통해 그래들을 확장해서 사용할 수 있다.
- 대표적인 예가 java이다. 자바를 컴파일하려면 그래들 자바 플러그인이 필요하다.
- 플러그인의 id는 'java'이고 이는 빌드를 위해 자바 플러그인을 사용함을 명시한다.
- boot나 management 역시 동일하다. 다만 이 플러그인을 사용하려면 버전 정보를 넘겨줘야한다.
*/
plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}
//group,version,sourceCompatibility 는 프로젝트의 메타데이터이다.
group = 'com.example' 		//artifact(애플리케이션)를 배포하는 데 사용된다.
version = '0.0.1-SNAPSHOT'	//이 프로젝트의 버전
sourceCompatibility = '1.8'	//java 컴파일을 위해 java 플러그인을 추가했다. 
							//이 자바 플러그인은 명시된 자바 버전을 이용해 소스를 컴파일한다.

//이 부분에서 annotaionProcessor를 컴파일 당시 사용하라고 그래들에게 알려준다.
configurations {
	compileOnly {
		extendsFrom annotationProcessor  //롬복이 코드를 작서아혀렴 어노테이션 프로세서가 필요하다.
	}
}
//그래들이 라이브러리를 다운로드하는 곳을 리포지터리라고 한다.
//보통 메이븐 센트럴을 주로 사용한다.
repositories {
	mavenCentral()	
}
//이 프로젝트에서 사용할 라이브러리를 명시하면 그래들이 리포지터리에서 라이브러리를 다운 및 설치를 한다.
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //스프링 데이터JPA를 사용하기 위한 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2' //데이터베이스로 로컬 환경에서 메모리상에 데이터베이스를 구축해준다.
	annotationProcessor 'org.projectlombok:lombok' //개발 시간 단축을 위해 롬복 라이브러리를 사용
												   //롬복은 어노테이션을 추가하면 컴파일 시 그에 상응하는 코드를 만들어주는 라이브러리
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// https://mvnrepository.com/artifact/com.google.guava/guava >>>>구글 구아바 라이브러리 추가
	implementation group: 'com.google.guava', name: 'guava', version: '28.1-jre'
}

tasks.named('test') {
	useJUnitPlatform()
}
